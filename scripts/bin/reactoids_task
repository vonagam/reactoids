#!/usr/bin/env ruby

package_dirname = Dir.pwd

reactoids_dirname = File.expand_path '../reactoids', package_dirname

scripts_dirname = File.expand_path '../../scripts', package_dirname

gh_pages_dirname = File.expand_path '../../gh-pages', package_dirname


if ! File.exist?( "#{ package_dirname }/package.json" ) || ! File.exist?( "#{ scripts_dirname }/package.json" )

  abort 'Incorrect working directory'

end


bin_dirname = File.join scripts_dirname, 'node_modules', '.bin'

gulpfile_path = File.join scripts_dirname, 'gulp', 'gulpfile.js'

stories_dirname = File.join scripts_dirname, 'stories'

gh_page_dirname = File.join gh_pages_dirname, File.basename( package_dirname )


task = ARGV.first


babel_env = case task

  when 'lib:test', 'lib:watch', 'lib:debug'

    'test'

  when 'lib:story'

    'story'

  when 'lib:build', 'dist:build'

    'library'

  when 'dist:story'

    'pages'

  else

    nil

  ##

end


env = {

  'REACTOIDS_SCRIPTS' => scripts_dirname,

  'REACTOIDS_REACTOIDS' => reactoids_dirname,

  'REACTOIDS_PACKAGE' => package_dirname,

  'REACTOIDS_BABEL_ENV' => babel_env,

}


case task

  when 'lib:debug'

    exec env, "#{ bin_dirname }/mocha --inspect --inspect-brk --ui=bdd-lazy-var/rspec --require=babel-core/register --require=@reactoids/scripts/tests/setup ./sources/**/test.js"

  when 'lib:story'

    exec env, "start-storybook -p 8888 -c #{ stories_dirname }"

  when 'dist:story'

    exec env, "rm -rf #{ gh_page_dirname } && build-storybook -c #{ stories_dirname } -o #{ gh_page_dirname }"

  else

    exec env, "#{ bin_dirname }/gulp --gulpfile #{ gulpfile_path } --cwd #{ package_dirname } #{ task }"

  ##

end
